# -*- coding: utf-8 -*-
"""Lung_Cancer_App.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uFnjboj0WEUn-PZqSDf-Fxm_lwK1XbnQ
"""

import streamlit as st
import joblib
import pandas as pd
import matplotlib.pyplot as plt

model = joblib.load('lung_cancer_detection.pkl')

st.title("Lung Cancer Detection")

gender = st.selectbox("Gender", ["Male", "Female"])
age = st.slider("Age", 18, 100, 32)
smoking = st.selectbox("Do You Smoke?", ["Yes", "No"])
yellow_fingers = st.selectbox("Yellow Fingers?", ["Yes", "No"])
anxiety = st.selectbox("Do You Have Any Anxiety?", ["Yes", "No"])
peer_pressure = st.selectbox("Do You Have Any Peer Pressure?", ["Yes", "No"])
chronic_disease = st.selectbox("Any Chronic Disease?", ["Yes", "No"])
fatigue = st.selectbox("Do You Experience Fatigue?", ["Yes", "No"])
allergy = st.selectbox("Do You Experience Any Allergies, Eg. Dust Allergy", ["Yes", "No"])
wheezing = st.selectbox("Do You Experience Any Wheezing", ["Yes", "No"])
alcohol = st.selectbox("Do You Consume Alcohol", ["Yes", "No"])
coughing = st.selectbox("Frequent Coughing", ["Yes", "No"])
breath = st.selectbox("Shortness of Breathe?", ["Yes", "No"])
swallowing_difficulty = st.selectbox("Experiencing Swallowing Difficulty?", ["Yes", "No"])
chest_pain = st.selectbox("Chest Pain?", ["Yes", "No"])

gender = 1 if gender.strip().lower() == "Male" else 2
binary_map = {"yes": 2, "no": 1}

input_data = pd.DataFrame([{
    "GENDER": gender,
    "AGE" : age,
    "SMOKING": binary_map[smoking.strip().lower()],
    "YELLOW_FINGERS" : binary_map[yellow_fingers.strip().lower()],
    "ANXIETY" : binary_map[anxiety.strip().lower()],
    "PEER_PRESSURE" : binary_map[peer_pressure.strip().lower()],
    "CHRONIC DISEASE" : binary_map[chronic_disease.strip().lower()],
    "FATIGUE" : binary_map[fatigue.strip().lower()],
    "ALLERGY" : binary_map[allergy.strip().lower()],
    "WHEEZING" : binary_map[wheezing.strip().lower()],
    "ALCOHOL CONSUMING" : binary_map[alcohol.strip().lower()],
    "COUGHING" : binary_map[coughing.strip().lower()],
    "SHORTNESS OF BREATH": binary_map[breath.strip().lower()],
    "SWALLOWING DIFFICULTY": binary_map[swallowing_difficulty.strip().lower()],
    "CHEST PAIN" : binary_map[chest_pain.strip().lower()],
}])

input_data.columns = [col + " " if col in ["FATIGUE", "ALLERGY"] else col for col in input_data.columns]

if st.button("Predict"):
    prediction = model.predict(input_data)[0]
    proba = model.predict_proba(input_data)[0][1] * 100  # Convert to percentage

    # Determine risk level and appropriate message
    if proba >= 80:
        st.error(f"🔴 High Risk of Lung Cancer ({round(proba, 2)}%).\nPlease consult a doctor immediately.")
        pie_labels = [f'Risk ({proba:.1f}%)', f'Safe ({100 - proba:.1f}%)']
        pie_colors = ['red', 'green']
        pie_values = [proba, 100 - proba]
    elif proba >= 50:
        st.warning(f"🟠 Moderate Risk ({round(proba, 2)}%).\nMonitor your symptoms and consider a medical check-up.")
        pie_labels = [f'Risk ({proba:.1f}%)', f'Safe ({100 - proba:.1f}%)']
        pie_colors = ['orange', 'green']
        pie_values = [proba, 100 - proba]
    else:
        st.success(f"🟢 Low Risk ({round(proba, 2)}%).\nYour symptoms don’t seem serious, but stay alert and healthy.")
        pie_labels = [f'Safe ({100 - proba:.1f}%)', f'Risk ({proba:.1f}%)']
        pie_colors = ['green', 'red']
        pie_values = [100 - proba, proba]

    # Plot pie chart
    plt.figure(figsize=(4, 4))
    plt.pie(
        pie_values,
        labels=pie_labels,
        colors=pie_colors,
        autopct='%.1f%%'
    )
    st.pyplot(plt)

    # Disclaimer
    st.caption("📝 This result is a preliminary estimation based on symptoms. It is not a medical diagnosis. Please consult a healthcare professional for an accurate assessment.")

